{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description" : "status-app",
    "Parameters" : {
        "VpcId" : {
            "Type" : "String",
            "Description" : "VpcId of your existing Virtual Private Cloud (VPC)",
            "Default" : "vpc-e6e00183"
        },
        "Subnets" : {
            "Type" : "CommaDelimitedList",
            "Description" : "The list of SubnetIds in your Virtual Private Cloud (VPC)",
            "Default" : "subnet-cb91ae8d, subnet-a7b74ac2, subnet-179e8063"
        },
        "Stack": {
            "Description": "Applied directly as a tag",
            "Type": "String"
        },
        "KeyName" : {
            "Description" : "The EC2 Key Pair to allow SSH access to the instance",
            "Type" : "String"
        },
        "Stage": {
            "Description" : "Applied directly as a tag",
            "Type" : "String",
            "Default" : "PROD"
        },
        "HostedZone" : {
            "Description" : "DNS hosted zone for which A CNAME will be created. e.g. 'example.com' (note, no trailing full-stop) for status.example.com. Leave empty if you don't want to add a CNAME to the status app",
            "Type" : "String"
        },
        "ManagementPort": {
            "Description": "Default port used to retrieve version information from web-apps",
            "Type": "Number",
            "Default": "9000"
        },
        "InstanceType" : {
            "Description" : "EC2 instance type",
            "Type" : "String",
            "Default" : "t1.micro",
            "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
            "ConstraintDescription" : "must be a valid EC2 instance type."
        }
    },
    "Conditions": {
        "HasDNS": { "Fn::Not" : [{"Fn::Equals" : [{"Ref" : "HostedZone"}, "" ] } ] }
    },
    "Resources" : {

        "StatusAppRole" : {
            "Type" : "AWS::IAM::Role",
            "Properties":{
                "Path":"/",
                "AssumeRolePolicyDocument": {
                    "Statement": [ {
                        "Effect": "Allow",
                        "Principal": { "Service": [ "ec2.amazonaws.com" ] },
                        "Action": [ "sts:AssumeRole" ]
                    } ]
                }
            }
        },
        "StatusAppReadMetadataPolicy" : {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "StatusAppReadMetadataPolicy",
                "PolicyDocument": {
                    "Statement": [ {
                        "Action": [
                            "ec2:describe*",
                            "autoscaling:Describe*",
                            "elasticloadbalancing:Describe*",
                            "cloudwatch:Get*",
                            "sqs:ListQueues"
                        ],
                        "Effect": "Allow",
                        "Resource":"*"
                    }]
                },
                "Roles": [ { "Ref": "StatusAppRole" } ]
            }
        },
        "StatusAppInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [ {
                    "Ref": "StatusAppRole"
                } ]
            }
        },

        "LoadBalancer" : {
            "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
            "Properties" : {
                "Subnets" : { "Ref" : "Subnets" },
                "SecurityGroups" : [ { "Ref" : "LoadBalancerSecurityGroup" } ],
                "Listeners" : [ {
                    "LoadBalancerPort" : "80",
                    "InstancePort" : "9000",
                    "Protocol" : "HTTP"
                } ],

                "HealthCheck" : {
                    "Target" : "HTTP:9000/management/healthcheck",
                    "HealthyThreshold" : "2",
                    "UnhealthyThreshold" : "2",
                    "Interval" : "10",
                    "Timeout" : "5"
                }
            }
        },
        "LoadBalancerSecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Permit incoming HTTP access on port 80, egress to port 9000",
                "VpcId" : { "Ref" : "VpcId" },
                "SecurityGroupIngress" : [
                    { "IpProtocol": "tcp", "FromPort": "80",  "ToPort": "80",  "CidrIp": "77.91.248.0/21" },
                    { "IpProtocol": "tcp", "FromPort": "443", "ToPort": "443", "CidrIp": "77.91.248.0/21" },
                    { "IpProtocol": "tcp", "FromPort": "80",  "ToPort": "80",  "CidrIp": "80.254.158.92/32" },
                    { "IpProtocol": "tcp", "FromPort": "80",  "ToPort": "80",  "CidrIp": "80.254.146.68/32" }
                ],
                "SecurityGroupEgress" : [
                    { "IpProtocol": "tcp", "FromPort": "9000", "ToPort": "9000", "CidrIp": "0.0.0.0/0" }
                ]
            }
        },

        "AutoscalingGroup" : {
            "Type" : "AWS::AutoScaling::AutoScalingGroup",
            "Properties" : {
                "AvailabilityZones" : { "Fn::GetAZs" : "" },
                "VPCZoneIdentifier" : { "Ref" : "Subnets" },
                "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
                "MinSize" : "1",
                "MaxSize" : "2",
                "DesiredCapacity" : "1",
                "HealthCheckType" : "ELB",
                "HealthCheckGracePeriod" : 300,
                "LoadBalancerNames" : [ { "Ref": "LoadBalancer" }],
                "Tags" : [
                    { "Key" : "Stack", "Value" : { "Ref" : "Stack" }, "PropagateAtLaunch" : "true" },
                    { "Key" : "App", "Value" : "status-app", "PropagateAtLaunch" : "true" },
                    { "Key" : "Stage", "Value" : { "Ref" : "Stage" }, "PropagateAtLaunch" : "true"  },
                    { "Key" : "Management", "Value" : "port=9000", "PropagateAtLaunch" : "true" },
                    { "Key" : "Role", "Value" : { "Fn::Join": ["-", [{ "Ref" : "Stack" }, "status-app"]]}, "PropagateAtLaunch" : "true"  }
                ]
            }
        },

        "LaunchConfig" : {
            "Type" : "AWS::AutoScaling::LaunchConfiguration",
            "Properties" : {
                "KeyName" : { "Ref" : "KeyName" },
                "ImageId" : "ami-cb4986bc",
                "SecurityGroups": [
                    { "Ref" : "EC2SecurityGroup" }, { "Ref" : "StatusAppSecurityGroup" }
                ],
                "InstanceType" : { "Ref" : "InstanceType" },
                "IamInstanceProfile": { "Ref" : "StatusAppInstanceProfile" },

                "UserData" : { "Fn::Base64": {
                    "Fn::Join":["\n", [
                        "#!/bin/bash -ev",
                        "apt-get -y update",
                        "apt-get -y install language-pack-en openjdk-7-jre-headless unzip",

                        "adduser --system --home /status --disabled-password status",

                        {"Fn::Join":["/", ["wget https://s3-eu-west-1.amazonaws.com/ophan-dist", { "Ref" : "Stack" }, { "Ref" : "Stage" },  "status-app/status-app.conf --directory-prefix=/etc/init"]]},

                        {"Fn::Join":["/", ["wget https://s3-eu-west-1.amazonaws.com/ophan-dist", { "Ref" : "Stack" }, { "Ref" : "Stage" },  "status-app/status-app-1.0.zip --directory-prefix=/status"]]},

                        "unzip -d /status /status/status-app-1.0.zip",

                        "chown -R status /status/",

                        {"Fn::Join": ["", ["start status-app MANAGEMENT_PORT=", { "Ref" : "ManagementPort" }]]}
                    ]]

                }}
            }
        },

        "StatusAppSecurityGroup": {
          "Type": "AWS::EC2::SecurityGroup",
            "Properties" : {
                "VpcId" : { "Ref" : "VpcId" },
                "GroupDescription" : "Allow Status App access to mangement"
            }
        },

        "EC2SecurityGroup" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Open up SSH access and http to load balancer",
                "VpcId" : { "Ref" : "VpcId" },
                "SecurityGroupIngress" : [
                    { "IpProtocol": "tcp", "FromPort": "22",   "ToPort": "22",   "CidrIp": "0.0.0.0/0" },
                    { "IpProtocol": "tcp", "FromPort": "9000",   "ToPort": "9000",   "CidrIp": "77.91.248.0/21" },
                    { "IpProtocol": "tcp", "FromPort": "9000", "ToPort": "9000", "SourceSecurityGroupId" : { "Ref" : "LoadBalancerSecurityGroup" } },
                    { "IpProtocol": "tcp", "FromPort": "9000",   "ToPort": "9000", "SourceSecurityGroupId": { "Ref" : "StatusAppSecurityGroup" } }
                ]
            }
        },

        "MainDnsEntry" : {
            "Type" : "AWS::Route53::RecordSet",
            "Condition": "HasDNS",
            "Properties" : {
                "HostedZoneName" : { "Fn::Join": ["", [{ "Ref" : "HostedZone" }, "."]] },
                "Comment" : "CNAME for status app",
                "Name" : { "Fn::Join": [".", ["status", { "Ref" : "HostedZone" }]] },
                "Type" : "CNAME",
                "TTL" : "900",
                "ResourceRecords" : [
                    {"Fn::GetAtt":["LoadBalancer","DNSName"]}
                ]
            }
        }
    }
}
